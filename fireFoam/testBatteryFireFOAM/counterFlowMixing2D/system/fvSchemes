/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default         none;
    div(phi,U)      Gauss limitedLinear 1;
    div(phi,k)      Gauss limitedLinear 1;
    div(phi,Yi_hs) Gauss multivariateSelection
    {
        //O2              limitedLinear01 1;
        O2              upwind;
        N2              limitedLinear01 1;
        CH4              limitedLinear01 1;
        H2O              limitedLinear01 1;
        CO2              limitedLinear01 1;
        hs              limitedLinear 1;
    };
    div((muEff*dev2(grad(U).T()))) Gauss linear;
    div(phiU,p)     Gauss linear;
    div(Ji,Ii_h)    Gauss upwind;
}

laplacianSchemes
{
    //default         none;
    default         Gauss linear corrected;
    laplacian(muEff,U) Gauss linear corrected;
    laplacian(DkEff,k) Gauss linear corrected;
    laplacian(DBEff,B) Gauss linear corrected;
    laplacian(alphaEff,hs) Gauss linear corrected;
    laplacian(alphaEff,fu) Gauss linear corrected;
    laplacian(alphaEff,ft) Gauss linear corrected;
    laplacian((((rho*(1|A(U)))*rho)*gh)) Gauss linear corrected;
    laplacian(interpolate((rho*(1|A(U)))),p) Gauss linear corrected;
    laplacian(gammaRad,G) Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

fluxRequired
{
    default         no;
    p_rgh;
}


// ************************************************************************* //
